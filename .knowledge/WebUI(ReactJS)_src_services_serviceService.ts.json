{"is_source_file": true, "format": "TypeScript", "description": "This file defines a ServiceProvisioningService class responsible for interacting with an API to manage services, including CRUD operations, deployment, status, metrics, logs, validation, cloning, import/export, and deployment history.", "external_files": ["./api", "../types"], "external_methods": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "published": ["new ServiceProvisioningService()"], "classes": [{"name": "ServiceProvisioningService", "description": "A service class providing methods to manage services via API calls."}], "methods": [{"name": "getServices", "description": "Retrieve a paginated list of services with optional search term."}, {"name": "getService", "description": "Fetch details of a specific service by ID."}, {"name": "createService", "description": "Create a new service with given data."}, {"name": "updateService", "description": "Update an existing service identified by ID."}, {"name": "deleteService", "description": "Delete a service by ID."}, {"name": "deployService", "description": "Deploy a service to target devices."}, {"name": "undeployService", "description": "Undeploy a service from target devices."}, {"name": "restartService", "description": "Restart a deployed service."}, {"name": "getServiceStatus", "description": "Retrieve current status information for a service."}, {"name": "getServiceMetrics", "description": "Fetch metrics data for a service, optionally within a specific time range."}, {"name": "getServiceLogs", "description": "Retrieve logs for a service, with optional limit and level filters."}, {"name": "validateServiceConfiguration", "description": "Validate the configuration of a service before deployment."}, {"name": "previewServiceDeployment", "description": "Preview deployment commands and estimate duration."}, {"name": "getDeploymentHistory", "description": "Get past deployment records for a service."}, {"name": "rollbackService", "description": "Rollback a service to a previous deployment."}, {"name": "cloneService", "description": "Create a clone of an existing service with a new name."}, {"name": "exportService", "description": "Export service configuration as a Blob."}, {"name": "importService", "description": "Import a service configuration from a file."}], "calls": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "search-terms": ["ServiceProvisioningService", "deployService", "clone", "importService", "exportService", "validateServiceConfiguration", "getServiceStatus"], "state": 2, "file_id": 50, "knowledge_revision": 119, "git_revision": "6067738ee89e44c33086ceba4981ccd279a7ce5f", "ctags": [], "hash": "aee148bbb5bdbdd8d027e770d3baa214", "format-version": 4, "code-base-name": "WebUI(ReactJS)", "filename": "WebUI(ReactJS)/src/services/serviceService.ts", "revision_history": [{"119": "6067738ee89e44c33086ceba4981ccd279a7ce5f"}]}