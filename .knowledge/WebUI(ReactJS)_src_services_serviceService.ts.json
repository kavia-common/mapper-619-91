{"is_source_file": true, "format": "TypeScript", "description": "This file defines the ServiceProvisioningService class, which provides methods for managing services via API calls in a web application's frontend. It includes functions for CRUD operations, deployment, status checks, metrics, logs, validation, cloning, exporting, importing, and deployment history related to services.", "external_files": ["./api", "../types"], "external_methods": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "published": ["ServiceProvisioningService"], "classes": [{"name": "ServiceProvisioningService", "description": "A class encapsulating various API interactions for service management, including deployment, status, metrics, logs, validation, cloning, export, import, and rollback functionalities."}], "methods": [{"name": "getServices", "description": "Retrieves a paginated list of services with optional search."}, {"name": "getService", "description": "Fetches details of a specific service by ID."}, {"name": "createService", "description": "Creates a new service with provided data."}, {"name": "updateService", "description": "Updates an existing service identified by ID."}, {"name": "deleteService", "description": "Deletes a service by ID."}, {"name": "deployService", "description": "Deploys a service to target devices."}, {"name": "undeployService", "description": "Removes a service from target devices."}, {"name": "restartService", "description": "Restarts a deployed service."}, {"name": "getServiceStatus", "description": "Retrieves the current deployment and health status of a service."}, {"name": "getServiceMetrics", "description": "Fetches metrics data for a service within an optional time range."}, {"name": "getServiceLogs", "description": "Retrieves logs for a specific service with optional limit and level filters."}, {"name": "validateServiceConfiguration", "description": "Validates a service configuration before deployment."}, {"name": "previewServiceDeployment", "description": "Provides a preview of commands that will be executed during deployment."}, {"name": "getDeploymentHistory", "description": "Fetches the deployment history for a specific service."}, {"name": "rollbackService", "description": "Rolls back a service to a previous deployment."}, {"name": "cloneService", "description": "Clones an existing service with a new name."}, {"name": "exportService", "description": "Exports a service's configuration as a Blob."}, {"name": "importService", "description": "Imports a service configuration from a file."}], "calls": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "search-terms": ["ServiceProvisioningService", "deployService", "getServiceMetrics", "validateServiceConfiguration"], "state": 2, "file_id": 50, "knowledge_revision": 120, "git_revision": "6067738ee89e44c33086ceba4981ccd279a7ce5f", "ctags": [], "hash": "aee148bbb5bdbdd8d027e770d3baa214", "format-version": 4, "code-base-name": "WebUI(ReactJS)", "filename": "WebUI(ReactJS)/src/services/serviceService.ts", "revision_history": [{"120": "6067738ee89e44c33086ceba4981ccd279a7ce5f"}]}