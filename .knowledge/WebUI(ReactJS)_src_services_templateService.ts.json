{"is_source_file": true, "format": "TypeScript", "description": "This file defines the `TemplateService` class providing an abstraction over API calls related to template management, including CRUD operations, testing, validation, rendering, and additional helpers for templates in a web application.", "external_files": ["./api", "@/types"], "external_methods": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "published": [], "classes": [{"name": "TemplateService", "description": "A class providing methods to perform CRUD operations, validation, rendering, testing, and auxiliary functions for templates via API calls."}], "methods": [{"name": "getTemplates", "description": "Fetches a paginated list of templates, optionally filtered by a search term."}, {"name": "getTemplate", "description": "Retrieves a specific template by its ID."}, {"name": "createTemplate", "description": "Creates a new template with provided data."}, {"name": "updateTemplate", "description": "Updates an existing template with new data."}, {"name": "deleteTemplate", "description": "Deletes a template by ID."}, {"name": "renderTemplate", "description": "Renders a template with given variables."}, {"name": "validateTemplate", "description": "Validates the syntax of a template."}, {"name": "testTemplate", "description": "Tests a template with a specific test case."}, {"name": "runAllTests", "description": "Runs all test cases associated with a template."}, {"name": "getTemplatesByVendor", "description": "Retrieves templates filtered by vendor."}, {"name": "getTemplatesByDevice", "description": "Retrieves templates filtered by device type."}, {"name": "cloneTemplate", "description": "Clones an existing template with a new name."}, {"name": "exportTemplate", "description": "Exports a template as a downloadable file."}, {"name": "importTemplate", "description": "Imports a template from uploaded file."}, {"name": "getTemplateVariables", "description": "Fetches variables defined within a template."}, {"name": "updateTemplateVariables", "description": "Updates variables of a template."}, {"name": "addTestCase", "description": "Adds a new test case to a template."}, {"name": "updateTestCase", "description": "Updates an existing test case within a template."}, {"name": "deleteTestCase", "description": "Deletes a test case from a template."}], "calls": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "search-terms": ["TemplateService", "template CRUD", "template rendering", "template validation", "template testing", "template variables", "API interaction"], "state": 2, "file_id": 15, "knowledge_revision": 31, "git_revision": "", "ctags": [], "hash": "421d50443111740996e9af21ee316e69", "format-version": 4, "code-base-name": "WebUI(ReactJS)", "filename": "WebUI(ReactJS)/src/services/templateService.ts", "revision_history": [{"31": ""}]}