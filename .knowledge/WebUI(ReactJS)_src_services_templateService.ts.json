{"is_source_file": true, "format": "TypeScript", "description": "This file defines a TypeScript class 'TemplateService' that provides methods for managing templates via API calls, including CRUD operations, rendering, validation, testing, and importing/exporting templates.", "external_files": ["./api", "../types"], "external_methods": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "published": ["TemplateService"], "classes": [{"name": "TemplateService", "description": "A service class handling API interactions related to templates, exposing methods for CRUD, rendering, validation, testing, and other template operations."}], "methods": [{"name": "getTemplates", "description": "Fetches a paginated list of templates with optional search."}, {"name": "getTemplate", "description": "Retrieves a specific template by its ID."}, {"name": "createTemplate", "description": "Creates a new template with provided data."}, {"name": "updateTemplate", "description": "Updates an existing template identified by its ID."}, {"name": "deleteTemplate", "description": "Deletes a template by ID."}, {"name": "renderTemplate", "description": "Renders a template with specified variables."}, {"name": "validateTemplate", "description": "Validates the syntax of a template."}, {"name": "testTemplate", "description": "Runs a test case on a template."}, {"name": "runAllTests", "description": "Executes all test cases associated with a template."}, {"name": "getTemplatesByVendor", "description": "Retrieves templates filtered by vendor."}, {"name": "getTemplatesByDevice", "description": "Retrieves templates filtered by device type."}, {"name": "cloneTemplate", "description": "Creates a clone of an existing template with a new name."}, {"name": "exportTemplate", "description": "Exports a template as a downloadable file."}, {"name": "importTemplate", "description": "Imports a template from a file."}, {"name": "getTemplateVariables", "description": "Fetches variables defined within a template."}, {"name": "updateTemplateVariables", "description": "Updates variables of a template."}, {"name": "addTestCase", "description": "Adds a new test case to a template."}, {"name": "updateTestCase", "description": "Updates a specific test case of a template."}, {"name": "deleteTestCase", "description": "Removes a test case from a template."}], "calls": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "search-terms": ["TemplateService", "getTemplates", "renderTemplate", "validateTemplate", "testTemplate", "importTemplate", "exportTemplate"], "state": 2, "file_id": 52, "knowledge_revision": 117, "git_revision": "6067738ee89e44c33086ceba4981ccd279a7ce5f", "ctags": [], "hash": "facef78b2902aab321c0b07ef92be0a4", "format-version": 4, "code-base-name": "WebUI(ReactJS)", "filename": "WebUI(ReactJS)/src/services/templateService.ts", "revision_history": [{"117": "6067738ee89e44c33086ceba4981ccd279a7ce5f"}]}