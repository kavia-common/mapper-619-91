{"is_source_file": true, "format": "TypeScript", "description": "This source file defines the TemplateService class that provides methods to interact with templates via API calls, including CRUD operations, rendering, validation, testing, importing/exporting, and managing related entities.", "external_files": ["./api", "../types"], "external_methods": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "published": ["new TemplateService()"], "classes": [{"name": "TemplateService", "description": "A service class providing various methods to manage templates through API interactions."}], "methods": [{"name": "getTemplates", "description": "Retrieve a paginated list of templates with optional search filter."}, {"name": "getTemplate", "description": "Retrieve a specific template by its ID."}, {"name": "createTemplate", "description": "Create a new template with provided data."}, {"name": "updateTemplate", "description": "Update an existing template identified by its ID."}, {"name": "deleteTemplate", "description": "Delete a template by its ID."}, {"name": "renderTemplate", "description": "Render a template with specified variables."}, {"name": "validateTemplate", "description": "Validate the syntax and correctness of a template."}, {"name": "testTemplate", "description": "Run a specific test case against a template."}, {"name": "runAllTests", "description": "Execute all test cases for a given template."}, {"name": "getTemplatesByVendor", "description": "Retrieve templates filtered by vendor."}, {"name": "getTemplatesByDevice", "description": "Retrieve templates filtered by device type."}, {"name": "cloneTemplate", "description": "Create a copy of an existing template with a new name."}, {"name": "exportTemplate", "description": "Export a template as a downloadable file."}, {"name": "importTemplate", "description": "Import a template from a file."}, {"name": "getTemplateVariables", "description": "Fetch variables associated with a template."}, {"name": "updateTemplateVariables", "description": "Update variables of a template."}, {"name": "addTestCase", "description": "Add a new test case to a template."}, {"name": "updateTestCase", "description": "Modify an existing test case of a template."}, {"name": "deleteTestCase", "description": "Remove a test case from a template."}], "calls": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "search-terms": ["TemplateService", "template management", "API interaction", "template CRUD", "rendering templates", "validating templates", "testing templates", "import/export templates"], "state": 2, "file_id": 52, "knowledge_revision": 116, "git_revision": "6067738ee89e44c33086ceba4981ccd279a7ce5f", "ctags": [], "hash": "facef78b2902aab321c0b07ef92be0a4", "format-version": 4, "code-base-name": "WebUI(ReactJS)", "filename": "WebUI(ReactJS)/src/services/templateService.ts", "revision_history": [{"116": "6067738ee89e44c33086ceba4981ccd279a7ce5f"}]}