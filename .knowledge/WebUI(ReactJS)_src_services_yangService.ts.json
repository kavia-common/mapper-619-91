{"is_source_file": true, "format": "TypeScript", "description": "This file defines a YangService class providing various methods to interact with YANG models through API endpoints, including CRUD operations, parsing, validation, comparison, and auxiliary features like documentation generation and importing/exporting models.", "external_files": ["./api", "../types"], "external_methods": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "published": ["YangService"], "classes": [{"name": "YangService", "description": "A service class providing API interface methods for managing YANG models within the application."}], "methods": [{"name": "getYangModels", "description": "Fetches a paginated list of YANG models with optional search parameters."}, {"name": "getYangModel", "description": "Retrieves a specific YANG model by its ID."}, {"name": "createYangModel", "description": "Creates a new YANG model with provided data."}, {"name": "updateYangModel", "description": "Updates an existing YANG model identified by its ID."}, {"name": "deleteYangModel", "description": "Deletes the YANG model with the specified ID."}, {"name": "uploadYangModel", "description": "Uploads a YANG model file to the server."}, {"name": "parseYangModel", "description": "Parses and validates the syntax of a YANG model content."}, {"name": "validateYangModel", "description": "Validates a specific YANG model by its ID."}, {"name": "getYangModelDependencies", "description": "Retrieves dependencies for a specific YANG model."}, {"name": "getYangModelsByNamespace", "description": "Retrieves YANG models filtered by namespace."}, {"name": "getYangModelsByDevice", "description": "Retrieves YANG models associated with a given device ID."}, {"name": "searchYangModels", "description": "Performs an advanced search for YANG models with filters."}, {"name": "getYangModelTree", "description": "Gets the tree structure of a YANG model for visualization."}, {"name": "getYangModelSchema", "description": "Retrieves the JSON schema representation of a YANG model."}, {"name": "compareYangModels", "description": "Compares two YANG models and reports differences."}, {"name": "generateDocumentation", "description": "Generates documentation (HTML, PDF, Markdown) for a YANG model."}, {"name": "exportYangModel", "description": "Exports a YANG model in specified formats (YANG, JSON, XML)."}, {"name": "importYangModels", "description": "Imports multiple YANG model files into the system."}, {"name": "getYangModelHistory", "description": "Retrieves version history of a particular YANG model."}], "calls": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "search-terms": ["YangService", "YANG models API", "parseYangModel", "getYangModelSchema", "compareYangModels", "uploadYangModel", "importYangModels", "generateDocumentation", "getYangModelTree", "getYangModelHistory"], "state": 2, "file_id": 52, "knowledge_revision": 120, "git_revision": "6067738ee89e44c33086ceba4981ccd279a7ce5f", "ctags": [], "hash": "9bf4ef7e05bf6c0cc42f18819a4b27ce", "format-version": 4, "code-base-name": "WebUI(ReactJS)", "filename": "WebUI(ReactJS)/src/services/yangService.ts", "revision_history": [{"120": "6067738ee89e44c33086ceba4981ccd279a7ce5f"}]}