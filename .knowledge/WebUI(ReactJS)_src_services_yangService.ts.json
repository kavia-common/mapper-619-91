{"is_source_file": true, "format": "TypeScript", "description": "This file defines a YangService class providing methods to interact with a backend API for managing YANG models. It includes functions for CRUD operations, parsing, validation, dependency management, comparison, documentation generation, import/export, and version history for YANG models.", "external_files": ["./api", "@/types"], "external_methods": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "published": ["YangService"], "classes": [{"name": "YangService", "description": "A service class providing asynchronous methods to perform CRUD operations, parsing, validation, comparison, and other management tasks related to YANG models via API calls."}], "methods": [{"name": "getYangModels", "description": "Retrieve a paginated list of YANG models with optional search filtering."}, {"name": "getYangModel", "description": "Retrieve a specific YANG model by its ID."}, {"name": "createYangModel", "description": "Create a new YANG model with provided data."}, {"name": "updateYangModel", "description": "Update an existing YANG model by its ID."}, {"name": "deleteYangModel", "description": "Delete a YANG model by its ID."}, {"name": "uploadYangModel", "description": "Upload a YANG model file to the server."}, {"name": "parseYangModel", "description": "Parse and validate YANG model content."}, {"name": "validateYangModel", "description": "Validate a stored YANG model by its ID."}, {"name": "getYangModelDependencies", "description": "Get dependencies of a specific YANG model."}, {"name": "getYangModelsByNamespace", "description": "Retrieve YANG models matching a specific namespace."}, {"name": "getYangModelsByDevice", "description": "Retrieve YANG models associated with a specific device."}, {"name": "searchYangModels", "description": "Search for YANG models using a query and optional filters."}, {"name": "getYangModelTree", "description": "Obtain a tree structure of a YANG model for visualization."}, {"name": "getYangModelSchema", "description": "Get the JSON schema representation of a YANG model."}, {"name": "compareYangModels", "description": "Compare two YANG models and identify differences."}, {"name": "generateDocumentation", "description": "Generate documentation for a YANG model in specified format."}, {"name": "exportYangModel", "description": "Export a YANG model in a specified format (yang, json, xml)."}, {"name": "importYangModels", "description": "Import multiple YANG model files, handling successes and failures."}, {"name": "getYangModelHistory", "description": "Retrieve version history of a YANG model."}], "calls": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "search-terms": ["YangModel", "parseYangModel", "getYangModels", "uploadYangModel", "compareYangModels"], "state": 2, "file_id": 12, "knowledge_revision": 25, "git_revision": "", "ctags": [], "hash": "ff55456042082f7a88517b36077f9dcf", "format-version": 4, "code-base-name": "WebUI(ReactJS)", "filename": "WebUI(ReactJS)/src/services/yangService.ts", "revision_history": [{"25": ""}]}