{"is_source_file": true, "format": "TypeScript", "description": "This file defines a YangService class that provides methods to interact with a backend API for managing YANG models, including CRUD operations, parsing, validation, dependency retrieval, comparison, documentation generation, export, import, and version history.", "external_files": ["./api", "../types"], "external_methods": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "published": ["default export: new YangService()"], "classes": [{"name": "YangService", "description": "A service class providing methods to manage YANG models via API calls."}], "methods": [{"name": "getYangModels", "description": "Fetches a paginated list of YANG models with optional search."}, {"name": "getYangModel", "description": "Retrieves a specific YANG model by its ID."}, {"name": "createYangModel", "description": "Creates a new YANG model with provided data."}, {"name": "updateYangModel", "description": "Updates an existing YANG model identified by ID."}, {"name": "deleteYangModel", "description": "Deletes a YANG model by ID."}, {"name": "uploadYangModel", "description": "Uploads a YANG model file."}, {"name": "parseYangModel", "description": "Parses and validates YANG model content."}, {"name": "validateYangModel", "description": "Validates a YANG model by ID."}, {"name": "getYangModelDependencies", "description": "Retrieves dependencies for a specific YANG model."}, {"name": "getYangModelsByNamespace", "description": "Fetches YANG models by namespace."}, {"name": "getYangModelsByDevice", "description": "Fetches YANG models associated with a device."}, {"name": "searchYangModels", "description": "Searches YANG models with filters."}, {"name": "getYangModelTree", "description": "Retrieves the tree structure of a YANG model for visualization."}, {"name": "getYangModelSchema", "description": "Gets the JSON schema representation of a YANG model."}, {"name": "compareYangModels", "description": "Compares two YANG models and returns differences."}, {"name": "generateDocumentation", "description": "Generates documentation for a YANG model in specified format."}, {"name": "exportYangModel", "description": "Exports a YANG model in specified format."}, {"name": "importYangModels", "description": "Imports multiple YANG model files."}, {"name": "getYangModelHistory", "description": "Retrieves version history of a YANG model."}], "calls": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "search-terms": ["YangModel", "YANG models API", "yang-models", "YANG model management", "YANG model parsing", "YANG model validation", "YANG model comparison", "YANG model documentation", "YANG model export", "YANG model import", "YANG model history"], "state": 2, "file_id": 12, "knowledge_revision": 108, "git_revision": "6067738ee89e44c33086ceba4981ccd279a7ce5f", "revision_history": [{"25": ""}, {"108": "6067738ee89e44c33086ceba4981ccd279a7ce5f"}], "ctags": [], "filename": "WebUI(ReactJS)/src/services/yangService.ts", "hash": "9bf4ef7e05bf6c0cc42f18819a4b27ce", "format-version": 4, "code-base-name": "https://github.com/kavia-common/mapper-619-91.git:kavia-main"}