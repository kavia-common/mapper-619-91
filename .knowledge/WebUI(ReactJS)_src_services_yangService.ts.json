{"is_source_file": true, "format": "TypeScript", "description": "This file defines a service class 'YangService' providing various methods to interact with YANG models through API calls, including CRUD operations, parsing, validation, dependency retrieval, search, comparison, and documentation export. It acts as an interface layer between the frontend components and the backend API endpoints concerning YANG models.", "external_files": ["./api", "../types"], "external_methods": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "published": ["YangService"], "classes": [{"name": "YangService", "description": "A service class encapsulating API interactions related to YANG models, including create, read, update, delete, parse, validate, compare, and export functionalities."}], "methods": [{"name": "getYangModels", "description": "Fetches a paginated list of YANG models with optional search term."}, {"name": "getYangModel", "description": "Retrieves a specific YANG model by its ID."}, {"name": "createYangModel", "description": "Creates a new YANG model with provided data."}, {"name": "updateYangModel", "description": "Updates an existing YANG model identified by ID."}, {"name": "deleteYangModel", "description": "Deletes a YANG model by ID."}, {"name": "uploadYangModel", "description": "Uploads a YANG model file for processing."}, {"name": "parseYangModel", "description": "Parses and validates a YANG model content string."}, {"name": "validateYangModel", "description": "Validates a YANG model by ID."}, {"name": "getYangModelDependencies", "description": "Gets dependencies for a specific YANG model."}, {"name": "getYangModelsByNamespace", "description": "Fetches YANG models by their namespace."}, {"name": "getYangModelsByDevice", "description": "Retrieves YANG models associated with a specific device."}, {"name": "searchYangModels", "description": "Performs an advanced search for YANG models with filters."}, {"name": "getYangModelTree", "description": "Fetches the tree structure of a YANG model for visualization."}, {"name": "getYangModelSchema", "description": "Retrieves JSON schema representation of a YANG model."}, {"name": "compareYangModels", "description": "Compares two YANG models and reports differences."}, {"name": "generateDocumentation", "description": "Generates documentation (HTML, PDF, Markdown) for a YANG model."}, {"name": "exportYangModel", "description": "Exports a YANG model in specified formats (YANG, JSON, XML)."}, {"name": "importYangModels", "description": "Imports multiple YANG model files."}, {"name": "getYangModelHistory", "description": "Retrieves version history of a YANG model."}], "calls": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "search-terms": ["YangService", "parseYangModel", "validateYangModel", "getYangModelDependencies", "getYangModelTree", "compareYangModels", "generateDocumentation", "importYangModels", "uploadYangModel", "exportYangModel"], "state": 2, "file_id": 12, "knowledge_revision": 107, "git_revision": "6067738ee89e44c33086ceba4981ccd279a7ce5f", "revision_history": [{"25": ""}, {"107": "6067738ee89e44c33086ceba4981ccd279a7ce5f"}], "ctags": [], "hash": "9bf4ef7e05bf6c0cc42f18819a4b27ce", "format-version": 4, "code-base-name": "WebUI(ReactJS)", "filename": "WebUI(ReactJS)/src/services/yangService.ts"}