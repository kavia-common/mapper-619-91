{"is_source_file": true, "format": "TypeScript", "description": "This source file defines a service class 'YangService' with methods to interact with a backend API for managing YANG models. It includes methods for CRUD operations, parsing, validation, searching, exporting, importing, and versioning of YANG models.", "external_files": ["./api", "../types"], "external_methods": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "published": ["YangService"], "classes": [{"name": "YangService", "description": "Service class providing methods to interact with YANG models API endpoints."}], "methods": [{"name": "getYangModels", "description": "Fetches a paginated list of YANG models with optional search."}, {"name": "getYangModel", "description": "Retrieves a specific YANG model by its ID."}, {"name": "createYangModel", "description": "Creates a new YANG model with provided data."}, {"name": "updateYangModel", "description": "Updates an existing YANG model identified by ID."}, {"name": "deleteYangModel", "description": "Deletes a YANG model by its ID."}, {"name": "uploadYangModel", "description": "Uploads a YANG model file."}, {"name": "parseYangModel", "description": "Parses and validates YANG model content."}, {"name": "validateYangModel", "description": "Validates a YANG model by its ID."}, {"name": "getYangModelDependencies", "description": "Retrieves dependencies for a specified YANG model."}, {"name": "getYangModelsByNamespace", "description": "Retrieves YANG models filtered by namespace."}, {"name": "getYangModelsByDevice", "description": "Fetches YANG models associated with a specific device."}, {"name": "searchYangModels", "description": "Performs an advanced search of YANG models with filters."}, {"name": "getYangModelTree", "description": "Gets the tree structure of a YANG model for visualization."}, {"name": "getYangModelSchema", "description": "Retrieves the JSON schema representation of a YANG model."}, {"name": "compareYangModels", "description": "Compares two YANG models and returns their differences."}, {"name": "generateDocumentation", "description": "Generates documentation for a YANG model in specified format."}, {"name": "exportYangModel", "description": "Exports a YANG model in a specified format."}, {"name": "importYangModels", "description": "Imports multiple YANG model files."}, {"name": "getYangModelHistory", "description": "Retrieves version history of a YANG model."}], "calls": ["apiService.get", "apiService.post", "apiService.put", "apiService.delete", "apiService.upload"], "search-terms": ["YangModel", "YANG models", "parseYangModel", "validateYangModel", "getYangModelTree", "compareYangModels", "generateDocumentation", "importYangModels", "version history"], "state": 2, "file_id": 48, "knowledge_revision": 120, "git_revision": "6067738ee89e44c33086ceba4981ccd279a7ce5f", "ctags": [], "hash": "9bf4ef7e05bf6c0cc42f18819a4b27ce", "format-version": 4, "code-base-name": "WebUI(ReactJS)", "filename": "WebUI(ReactJS)/src/services/yangService.ts", "revision_history": [{"120": "6067738ee89e44c33086ceba4981ccd279a7ce5f"}]}